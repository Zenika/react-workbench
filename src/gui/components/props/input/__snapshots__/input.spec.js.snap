// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component/props/input input.container.js model with type array should render a textfield 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      array
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.container.js model with type array should render a textfield with value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      array
      )
    </small>
  </label>
  <input
    checked="[\\"item1\\",\\"item2\\"]"
    id="foo"
    onChange={[Function]}
    type="text"
    value="[\\"item1\\",\\"item2\\"]"
  />
</div>
`;

exports[`component/props/input input.container.js model with type bool should render a checkbox 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      bool
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="checkbox"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.container.js model with type bool should render a checkbox with value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      bool
      )
    </small>
  </label>
  <input
    checked={true}
    id="foo"
    onChange={[Function]}
    type="checkbox"
    value={true}
  />
</div>
`;

exports[`component/props/input input.container.js model with type function should render a textfield 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      func
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.container.js model with type function should render a textfield with value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      func
      )
    </small>
  </label>
  <input
    checked={[Function]}
    id="foo"
    onChange={[Function]}
    type="text"
    value={[Function]}
  />
</div>
`;

exports[`component/props/input input.container.js model with type object should render a textfield 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      object
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.container.js model with type object should render a textfield with value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      object
      )
    </small>
  </label>
  <input
    checked="{\\"item\\":\\"value\\"}"
    id="foo"
    onChange={[Function]}
    type="text"
    value="{\\"item\\":\\"value\\"}"
  />
</div>
`;

exports[`component/props/input input.container.js model with type string should render a textfield 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.container.js model with type string should render a textfield with value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked="foo"
    id="foo"
    onChange={[Function]}
    type="text"
    value="foo"
  />
</div>
`;

exports[`component/props/input input.jsx common props should take custom className 1`] = `
<div
  className={
    Object {
      "data-css-53i54u": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.jsx common props should take custom style 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={
    Object {
      "backgroundColor": "red",
    }
  }
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.jsx input type="checkbox" should render a checkbox 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      bool
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="checkbox"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.jsx input type="checkbox" should set a default value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked={true}
    id="foo"
    onChange={[Function]}
    type="text"
    value={true}
  />
</div>
`;

exports[`component/props/input input.jsx input type="text" should render a textfield 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked={undefined}
    id="foo"
    onChange={[Function]}
    type="text"
    value={undefined}
  />
</div>
`;

exports[`component/props/input input.jsx input type="text" should set a default value 1`] = `
<div
  className={
    Object {
      "data-css-1to4m6n": "",
    }
  }
  style={Object {}}
>
  <label
    htmlFor="foo"
  >
    foo
     
    <small>
      (
      string
      )
    </small>
  </label>
  <input
    checked="bar"
    id="foo"
    onChange={[Function]}
    type="text"
    value="bar"
  />
</div>
`;
